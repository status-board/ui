version: 2

docker_defaults: &docker_defaults
  docker:
    - image: circleci/node:10
  working_directory: ~/project/ui

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/project

install_steps: &install_steps
  steps:
    - checkout
    - *attach_workspace
    - restore_cache:
        name: Restore node_modules cache
        keys:
          - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          - node-v1-{{ .Branch }}-
          - node-v1-
    - run:
        name: Install Dependencies
        command: npm i
    - save_cache:
        name: Save node_modules cache
        key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
        paths:
          - ./node_modules
    - persist_to_workspace:
        root: ~/project
        paths: ui

test_steps: &test_steps
  steps:
    - checkout
    - restore_cache:
        key: node-modules-{{ .Branch }}-{{ checksum "package-lock.json" }}
    - run:
        name: Install Local Packages
        command: npm i
    - run:
        name: Test Suite
        command: npm run test:ci

jobs:
  install:
    <<: *docker_defaults
    <<: *install_steps

  npmvet:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: NPM Vet
          command: |
            sudo npm i -g npmvet
            npm run verify:npmvet

  audit:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: NPM Audit Fix
          command: npm audit fix

  eslint:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: ESLint
          command: npm run eslint

  test-node-8:
    working_directory: ~/ui
    docker:
      - image: circleci/node:8
    <<: *test_steps

  test-node-10:
    <<: *docker_defaults
    <<: *test_steps

  test-node-12:
    working_directory: ~/ui
    docker:
      - image: circleci/node:12
    <<: *test_steps

  coverage:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: Coverage
          command: |
            npm run test:coverage:ci
            npm run test:coverage:codecov
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: reports/jest
      - store_test_results:
          path: reports

  build-typescript:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: Build JavaScript
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths: ui

  semantic-release:
    <<: *docker_defaults
    steps:
      - *attach_workspace
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Semantic Release
          command: npm run semantic-release

workflows:
  version: 2
  install-test-build-and-publish:
    jobs:
      - install
      - npmvet:
          requires:
            - install
      - audit:
          requires:
            - npmvet
      - eslint:
          requires:
            - audit
      - test-node-8:
          requires:
            - eslint
      - test-node-10:
          requires:
            - eslint
      - test-node-12:
          requires:
            - eslint
      - coverage:
          requires:
            - test-node-8
            - test-node-10
            - test-node-12
      - build-typescript:
          requires:
            - coverage
      - semantic-release:
          requires:
            - build-typescript
